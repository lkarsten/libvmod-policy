VPOL protocol
=============

This is a request-response protocol.

A client sends a request message, and receives a response message back.
If the server does not respond, it must be safe to retry the request.

The first 16 bytes of a request must be a VPOL header, consisting of:

	char[4] "VPOL"
	uint32 meta_length
	uint32 header_length
	uint64 body_length

This header is followed by the respective number of meta, header and body
octets. There is no end marker.

(what about gzip? very important if we do this in vcl_backend_response as well)

Request message
---------------

A request message has three parts:

1) Metadata
List of hardcoded keys, with their respective values. \n delimited.

2) Headers
List of key: values. \n delimited.

3) Body
This is the request body, if this request type permits it. (POST/PUT)

Not available in 3.0.


Response message
----------------

Currently defined as a three-octet string:

	"200" (permit this)
	anything else, at least 3 octets: do not permit this.

To be expanded upon. Missing points/functionality can be::

* whitelist/blacklist this client for n seconds.
* set/alter http headers (should perhaps be done in VCL)

